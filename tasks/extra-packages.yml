---
- name: Install PECL packages.
  #command: "{{ 'arch -arm64' if ansible_architecture == 'arm64' }} sudo pecl install -f {{ item.name | default(item) }}"
  # when: ansible_architecture == "arm64"
  community.general.pear:
    name: "pecl/{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
  loop: "{{ pecl_packages }}"

- name: Install global Composer packages.
  #community.general.composer:
    #command: "{{ (item.state | default('present') == 'absent') | ternary('remove', 'require') }}"
    # arguments: "global {{ item.name | default(item) }} {{ item.version | default('@stable') }}"
    # Ansible 2.4 supports `global_command` making `working_dir` optional.
    # working_dir: "{{ lookup('env', 'COMPOSER_HOME') | default('~/.composer', true) }}"
    #global_command: yes
  command:
    argv:
      - composer
      - global
      - "{{ (item.state | default('present') == 'absent') | ternary('remove', 'require') }}"
      - "{{ item.name | default(item) }}"
      - "{{ ':' if item.version | default('')  }}"
      - "{{ item.version | default('') }}"
    # working_dir: "{{ lookup('env', 'COMPOSER_HOME') | default('~/.composer', true) }}"
  loop: "{{ composer_packages }}"

- name: Install global NPM packages.
  npm:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    global: true
    executable: "{{ item.executable | default(omit) }}"
  loop: "{{ npm_packages }}"

- name: Install global Pip packages.
  pip:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    executable: "{{ item.executable | default(omit) }}"
  loop: "{{ pip_packages }}"

- name: Install global Ruby gems.
  gem:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    user_install: false
    executable: "{{ item.executable | default(omit) }}"
  loop: "{{ gem_packages }}"

- name: Install oh-my-fish packages.
  command: fish -c "omf install {{ item.name | default(item) }}" 
  loop: "{{ omf_packages }}"
